# Generated by Django 5.1.1 on 2024-10-07 17:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthAssignment',
            fields=[
                ('item_name', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64, primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64)),
                ('created_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_assignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthItem',
            fields=[
                ('name', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64, primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField()),
                ('description', models.TextField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', null=True)),
                ('rule_name', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=64, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthItemChild',
            fields=[
                ('parent', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64, primary_key=True, serialize=False)),
                ('child', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64)),
            ],
            options={
                'db_table': 'auth_item_child',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthRule',
            fields=[
                ('name', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=64, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexAdsFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('width', models.CharField(max_length=4)),
                ('height', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'cex_ads_format',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexAdsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cex_ads_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexAdvertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('position', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('user_id', models.CharField(max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('impressions_numbers', models.IntegerField(blank=True, null=True)),
                ('impressions_count', models.IntegerField(blank=True, null=True)),
                ('click_count', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=80)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cex_advertisement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexAliances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('seo_id', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'cex_aliances',
                'db_table_comment': 'Gesti√≥n de alianzas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('visible', models.TextField()),
                ('speed', models.IntegerField()),
                ('transition', models.CharField(max_length=64)),
                ('pause', models.IntegerField()),
                ('css', models.TextField()),
                ('images_count', models.IntegerField()),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('url_link', models.TextField(blank=True, db_comment='Incluida para agregar links', null=True)),
                ('banner_adv', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_banner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexBannerImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(max_length=250)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('text', models.CharField(blank=True, max_length=250, null=True)),
                ('banner_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_banner_img',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexBuilderTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'cex_builder_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexBuildWith',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=80)),
                ('email', models.CharField(max_length=80)),
                ('phone', models.CharField(max_length=80)),
                ('province', models.IntegerField()),
                ('q1', models.CharField(max_length=80)),
                ('q2', models.CharField(max_length=80)),
                ('q3', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'cex_build_with',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('seo_id', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('img_pdf', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=150, null=True)),
                ('hits', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'cex_catalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('short_description', models.CharField(blank=True, db_comment='Descripci√≥n corta para SEO', max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('img', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(db_comment='producto ¬´product¬ª o servicio ¬´service¬ª', max_length=20)),
                ('credits', models.FloatField(blank=True, db_comment='Creitos solo para terce nivel', null=True)),
                ('def_type', models.CharField(max_length=5)),
                ('def_price', models.FloatField()),
                ('do_related', models.TextField()),
                ('coins_coefficient', models.FloatField(blank=True, null=True)),
                ('min_coins', models.IntegerField(blank=True, null=True)),
                ('max_coins', models.IntegerField(blank=True, null=True)),
                ('industry_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexClientCrm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.IntegerField(blank=True, null=True)),
                ('enterprise', models.CharField(blank=True, max_length=255, null=True)),
                ('ruc', models.CharField(blank=True, max_length=45, null=True)),
                ('created_by', models.IntegerField()),
                ('has_transport', models.IntegerField(blank=True, null=True)),
                ('delivered_place', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cex_client_crm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCoinsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('stand_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('coins_before', models.IntegerField()),
                ('coins_after', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_coins_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCommentsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('comment', models.TextField()),
            ],
            options={
                'db_table': 'cex_comments_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'cex_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=80)),
                ('email', models.CharField(max_length=80)),
                ('phone', models.CharField(max_length=80)),
                ('province', models.IntegerField()),
                ('credit', models.CharField(max_length=80)),
                ('how_to_use', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'cex_credit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexExhibition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('url_image', models.CharField(max_length=250)),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('code', models.TextField(blank=True, null=True)),
                ('date_final', models.DateField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cex_exhibition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexGalley',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(max_length=45)),
                ('file_name', models.CharField(max_length=150)),
                ('url', models.CharField(max_length=45)),
                ('type', models.CharField(max_length=5)),
                ('profile_user_id', models.IntegerField(blank=True, null=True)),
                ('stand_id', models.IntegerField(blank=True, null=True)),
                ('service_product_id', models.IntegerField(blank=True, null=True)),
                ('catalog_id', models.IntegerField(blank=True, null=True)),
                ('aliances_id', models.IntegerField(blank=True, null=True)),
                ('seo_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_galley',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexHighlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_serv_prod', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('n_days', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_highlight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexInbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('phone', models.CharField(blank=True, max_length=80, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('organization', models.CharField(blank=True, max_length=80, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=45)),
                ('from_field', models.CharField(blank=True, db_column='from', max_length=120, null=True)),
                ('to', models.CharField(blank=True, max_length=120, null=True)),
                ('stand_name', models.CharField(blank=True, max_length=120, null=True)),
                ('mailed_it', models.DateTimeField()),
            ],
            options={
                'db_table': 'cex_inbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLandingPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('seo_description', models.CharField(max_length=255)),
                ('front_block', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.CharField(max_length=255)),
                ('has_slider_revolution', models.IntegerField()),
                ('slider_revolution_file', models.CharField(max_length=255)),
                ('slider_revolution_date', models.DateTimeField(blank=True, null=True)),
                ('slider_id', models.IntegerField(blank=True, null=True)),
                ('tour_switch', models.IntegerField()),
                ('tour_virtual_code', models.TextField(blank=True, null=True)),
                ('foot_bar', models.IntegerField()),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('promo_title', models.TextField(blank=True, null=True)),
                ('spaces_public', models.IntegerField()),
                ('is_public', models.IntegerField()),
                ('adsense_enabled', models.IntegerField()),
                ('adsense_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_landing_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLandingPagesAdv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('impressions_numbers', models.IntegerField(blank=True, null=True)),
                ('impressions_count', models.IntegerField(blank=True, null=True)),
                ('slider_id', models.IntegerField(blank=True, null=True)),
                ('has_slider_revolution', models.IntegerField()),
                ('slider_revolution_file', models.CharField(max_length=255)),
                ('slider_revolution_url', models.CharField(blank=True, max_length=250, null=True)),
                ('click_count', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=80)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('landing_pages_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_landing_pages_adv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLicitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField(db_comment='Id Exhibidor')),
                ('name', models.CharField(db_comment='Nombre Licitaci√≥n', max_length=255)),
                ('slug', models.CharField(db_comment='Slug Licitaci√≥n', max_length=255)),
                ('status', models.CharField(blank=True, db_comment='Estado Licitaci√≥n', max_length=255, null=True)),
                ('manager_name', models.CharField(db_comment='Nombre Gerente de Compras', max_length=255)),
                ('country_id', models.IntegerField(blank=True, db_comment='Id Pais', null=True)),
                ('province_id', models.IntegerField(blank=True, db_comment='Id Provincia', null=True)),
                ('city', models.CharField(blank=True, db_comment='Ciudad', max_length=255, null=True)),
                ('start_date', models.DateTimeField(db_comment='Fecha publicaci√≥n ¬´inicio Licitaci√≥n¬ª')),
                ('end_date', models.DateTimeField(db_comment='Fecha cierre Licitaci√≥n')),
                ('date_time_range', models.CharField(max_length=255)),
                ('estimated_value', models.FloatField(blank=True, db_comment='Valor estimado Licitaci√≥n', null=True)),
                ('description', models.TextField(db_comment='Descripci√≥n')),
                ('url_file', models.CharField(blank=True, db_comment='Url Archivo Adjunto', max_length=255, null=True)),
                ('licitation_value', models.FloatField(blank=True, db_comment='Valor de Licitaci√≥n', null=True)),
                ('admin_comments', models.TextField(blank=True, db_comment='Comentarios del Administrador', null=True)),
                ('created_at', models.IntegerField(blank=True, db_comment='Creado el', null=True)),
                ('updated_at', models.IntegerField(blank=True, db_comment='Actualizado en', null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('admin_pub_comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_licitation',
                'db_table_comment': 'Gesti√≥n de Licitaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLicitationMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.IntegerField(db_comment='Id emisor')),
                ('receiver_id', models.IntegerField(db_comment='Id de receptor')),
                ('created_at', models.IntegerField(blank=True, db_comment='Creado el', null=True)),
                ('updated_at', models.IntegerField(blank=True, db_comment='Actualizado el', null=True)),
                ('date_time', models.DateTimeField(db_comment='Fecha y hora mensaje')),
                ('message', models.TextField(db_comment='Mensaje')),
            ],
            options={
                'db_table': 'cex_licitation_messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLicitationProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_comment='Tipo de producto/servicio', max_length=255)),
                ('cat_n1_id', models.IntegerField(db_comment='Id Categor√≠a Nivel 1')),
                ('cat_n2_id', models.IntegerField(db_comment='Id Categor√≠a Nivel 2')),
                ('cat_n3_id', models.IntegerField(db_comment='Id Categor√≠a Nivel 2')),
                ('short_description', models.TextField(blank=True, db_comment='Descripci√≥n Corta', null=True)),
                ('unit_type', models.CharField(blank=True, db_comment='Tipo Unidad', max_length=255, null=True)),
                ('amount', models.IntegerField(blank=True, db_comment='Cantidad', null=True)),
                ('unit_value', models.FloatField(blank=True, db_comment='Valor unitario', null=True)),
            ],
            options={
                'db_table': 'cex_licitation_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLicitationStandPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField(db_comment='Id Exhibidor')),
                ('licitation_id', models.IntegerField(db_comment='id licitaci√≥n')),
                ('end_date', models.DateTimeField(blank=True, db_comment='Fecha de cierre de la Licitaci√≥n', null=True)),
            ],
            options={
                'db_table': 'cex_licitation_stand_payments',
                'db_table_comment': 'Control de apertura de licitaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menus_id', models.IntegerField()),
                ('order', models.IntegerField(blank=True, db_comment='Permite asignar orden', null=True)),
                ('name', models.CharField(max_length=45)),
                ('url', models.CharField(max_length=100)),
                ('parent_id', models.IntegerField()),
                ('target', models.CharField(blank=True, max_length=7, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=40, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexLocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('web', models.CharField(blank=True, max_length=255, null=True)),
                ('lat_lng', models.TextField(blank=True, null=True)),
                ('hits', models.CharField(blank=True, max_length=45, null=True)),
                ('slug', models.CharField(max_length=45, unique=True)),
                ('seo_id', models.IntegerField()),
                ('stand_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_local',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexMenus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'cex_menus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('creation_date', models.DateTimeField()),
                ('sent', models.IntegerField()),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexNotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('notification_id', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'cex_notification_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexOptimizationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('creation_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_optimization_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexOrderComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('comment', models.TextField()),
            ],
            options={
                'db_table': 'cex_order_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexOrderStand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('stand_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('tracking_number', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cex_order_stand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=150)),
                ('content', models.TextField(blank=True, null=True)),
                ('static', models.IntegerField(db_comment='Es p√°gina est√°tica? O funcional\n')),
                ('slug', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'cex_pages',
                'db_table_comment': 'Tabla para manejo de P√°ginas Est√°ticas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPaypalPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_paypal', models.CharField(max_length=255)),
                ('product_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=150)),
                ('interval_unit', models.CharField(max_length=255)),
                ('cycles', models.IntegerField()),
                ('price', models.FloatField()),
                ('price_currency', models.CharField(max_length=3)),
                ('fee', models.FloatField()),
                ('fee_currency', models.CharField(max_length=3)),
                ('tax', models.FloatField()),
                ('pro', models.IntegerField()),
                ('tax_inclusive', models.IntegerField()),
                ('create_time', models.CharField(max_length=50)),
                ('update_time', models.CharField(max_length=50)),
                ('stand_type_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_paypal_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPaypalProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('image_url', models.CharField(max_length=255)),
                ('home_url', models.CharField(max_length=255)),
                ('id_paypal', models.CharField(max_length=255)),
                ('create_time', models.CharField(max_length=50)),
                ('update_time', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cex_paypal_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPaypalSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_paypal', models.CharField(max_length=255)),
                ('stand_id', models.IntegerField()),
                ('plan_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_paypal_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='Nombre del Plan', max_length=150)),
                ('description', models.CharField(db_comment='Descripci√≥n del Plan', max_length=250)),
                ('description_pro', models.CharField(blank=True, db_comment='Descripci√≥n del Plan profecional', max_length=250, null=True)),
                ('payment_description', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_description_pro', models.CharField(blank=True, max_length=255, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('features_pro', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, db_comment='Slug del Plan', max_length=45, null=True)),
                ('active', models.TextField(db_comment='Activo/Inactivo')),
                ('plan_type', models.CharField(db_comment='Tipo del Plan', max_length=45)),
                ('valid_for_days', models.IntegerField(db_comment='Validez del plan en d√≠as')),
                ('monthly_cost', models.FloatField(db_comment='Costo del plan en valor mensual')),
                ('monthly_cost_pro', models.FloatField(blank=True, db_comment='Costo del plan en valor mensual - profesional', null=True)),
                ('annual_discount', models.FloatField(blank=True, db_comment='Descuento en el plan, en caso de pago anualizado', null=True)),
                ('annual_discount_pro', models.FloatField(blank=True, db_comment='Descuento en el plan, en caso de pago anualizado - profesional', null=True)),
                ('catalogs', models.IntegerField(db_comment='N√∫mero de cat√°logos para el plan')),
                ('catalogs_pro', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos para el plan profesional', null=True)),
                ('branding_index', models.TextField(db_comment='Permite modificar landing page exhibidor')),
                ('branding_index_pro', models.TextField(blank=True, db_comment='Permite modificar landing page exhibidor - profesional', null=True)),
                ('video_stand', models.TextField(db_comment='Se permite colocar videos en el exhibidor')),
                ('video_stand_pro', models.TextField(blank=True, db_comment='Se permite colocar videos en el exhibidor - profesional', null=True)),
                ('slider_pro_stand', models.TextField(db_comment='Permite la incluir de sliders pro')),
                ('slider_pro_stand_pro', models.TextField(blank=True, db_comment='Permite la incluir de sliders pro - profesional', null=True)),
                ('tour_virtual_stand', models.TextField(db_comment='Permite incluir Tour virtual')),
                ('tour_virtual_stand_pro', models.TextField(blank=True, db_comment='Permite incluir Tour virtual - profesional', null=True)),
                ('featured_product_index', models.IntegerField(db_comment='N√∫mero de productos destacados en pagina principal')),
                ('featured_product_index_pro', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en pagina principal - profesional', null=True)),
                ('featured_product_category', models.IntegerField(db_comment='N√∫mero de productos destacados en categor√≠as')),
                ('featured_product_category_pro', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en categor√≠as - profesional', null=True)),
                ('featured_catalog_index', models.IntegerField(db_comment='N√∫mero de cat√°logos')),
                ('featured_catalog_index_pro', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos - profesional', null=True)),
                ('featured_catalog_category', models.IntegerField(db_comment='Numero de cat√°logos promocionados en categor√≠a')),
                ('featured_catalog_category_pro', models.IntegerField(blank=True, db_comment='Numero de cat√°logos promocionados en categor√≠a - profesional', null=True)),
                ('banner_index', models.IntegerField(db_comment='N√∫mero de im√°genes por banner')),
                ('banner_index_pro', models.IntegerField(blank=True, db_comment='N√∫mero de im√°genes por banner - profesional', null=True)),
                ('credits', models.IntegerField(db_comment='Cr√©ditos para el plan')),
                ('credits_pro', models.IntegerField(blank=True, db_comment='Cr√©ditos para el plan profesional', null=True)),
                ('tour_virtual_stand_arq', models.TextField(db_comment='Permite incluir Tour virtual Arquitectura')),
                ('tour_virtual_stand_fer', models.TextField(db_comment='Permite incluir Tour virtual Ferreteria')),
                ('slider_pro_stand_arq', models.IntegerField(blank=True, db_comment='Permite la incluir de sliders pro arquitectura', null=True)),
                ('slider_pro_stand_fer', models.IntegerField(blank=True, db_comment='Permite la incluir de sliders pro ferreteria', null=True)),
                ('description_arq', models.CharField(blank=True, db_comment='Descripci√≥n del Plan Arquitectura', max_length=250, null=True)),
                ('description_fer', models.CharField(blank=True, db_comment='Descripci√≥n del Plan Ferreteria', max_length=250, null=True)),
                ('monthly_cost_arq', models.FloatField(blank=True, db_comment='Costo del plan en valor mensual - Arquitectura', null=True)),
                ('monthly_cost_fer', models.FloatField(blank=True, db_comment='Costo del plan en valor mensual - Ferreteria', null=True)),
                ('payment_description_arq', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_description_fer', models.CharField(blank=True, max_length=255, null=True)),
                ('features_arq', models.TextField(blank=True, null=True)),
                ('features_fer', models.TextField(blank=True, null=True)),
                ('annual_discount_arq', models.FloatField(blank=True, db_comment='Descuento en el plan, en caso de pago anualizado - Arquitectura', null=True)),
                ('annual_discount_fer', models.FloatField(blank=True, db_comment='Descuento en el plan, en caso de pago anualizado - Ferreteria', null=True)),
                ('catalogs_arq', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos para el plan Arquitectura', null=True)),
                ('catalogs_fer', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos para el plan Ferreteria', null=True)),
                ('branding_index_arq', models.TextField(blank=True, db_comment='Permite modificar landing page exhibidor - Arquitectura', null=True)),
                ('branding_index_fer', models.TextField(blank=True, db_comment='Permite modificar landing page exhibidor - Ferreteria', null=True)),
                ('video_stand_arq', models.TextField(blank=True, db_comment='Se permite colocar videos en el exhibidor - Arquitectura', null=True)),
                ('video_stand_fer', models.TextField(blank=True, db_comment='Se permite colocar videos en el exhibidor - Ferreteria', null=True)),
                ('featured_product_index_arq', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en pagina principal - Arquitectura', null=True)),
                ('featured_product_index_fer', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en pagina principal - Ferreteria', null=True)),
                ('featured_product_category_arq', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en categor√≠as - Arquitectura', null=True)),
                ('featured_product_category_fer', models.IntegerField(blank=True, db_comment='N√∫mero de productos destacados en categor√≠as - Ferreteria', null=True)),
                ('featured_catalog_index_arq', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos - Arquitectura', null=True)),
                ('featured_catalog_index_fer', models.IntegerField(blank=True, db_comment='N√∫mero de cat√°logos - Ferreteria', null=True)),
                ('featured_catalog_category_arq', models.IntegerField(blank=True, db_comment='Numero de cat√°logos promocionados en categor√≠a - Arquitectura', null=True)),
                ('featured_catalog_category_fer', models.IntegerField(blank=True, db_comment='Numero de cat√°logos promocionados en categor√≠a - Ferreteria', null=True)),
                ('banner_index_arq', models.IntegerField(blank=True, db_comment='N√∫mero de im√°genes por banner - Arquitectura', null=True)),
                ('banner_index_fer', models.IntegerField(blank=True, db_comment='N√∫mero de im√°genes por banner - Ferreteria', null=True)),
                ('credits_arq', models.IntegerField(blank=True, db_comment='Cr√©ditos para el plan Arquitectura', null=True)),
                ('credits_fer', models.IntegerField(blank=True, db_comment='Cr√©ditos para el plan Ferreteria', null=True)),
                ('promotion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPreforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_product_id', models.IntegerField()),
                ('quotes_id', models.IntegerField()),
                ('client_crm_id', models.IntegerField()),
                ('price_public_sale', models.FloatField()),
                ('price', models.FloatField()),
                ('price_countruex', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
                ('items_amount', models.IntegerField()),
                ('imagen_remove', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cex_preforma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPreformaPdf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_url', models.CharField(blank=True, max_length=250, null=True)),
                ('quotes_id', models.IntegerField()),
                ('created', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_preforma_pdf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexProductsTags',
            fields=[
                ('service_product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tag_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_products_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexProfessionalTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'cex_professional_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexPromoted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_serv_prod', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('n_days', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_promoted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexProvince',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('country_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'cex_province',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexQuotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('service_product_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=32)),
                ('ispaid', models.IntegerField(db_column='isPaid')),
                ('quoted_by', models.CharField(max_length=255)),
                ('quoted_on', models.DateTimeField()),
                ('quote_email', models.CharField(blank=True, max_length=150, null=True)),
                ('quote_phone', models.CharField(blank=True, max_length=45, null=True)),
                ('quote_notes', models.TextField(blank=True, null=True)),
                ('quote_preferred_contact', models.CharField(max_length=8)),
                ('quote_time_of_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('service_product_no_of_items', models.IntegerField()),
                ('quote_place_of_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('quote_price', models.FloatField(db_comment='Precio del √≠tem')),
                ('quote_c1', models.IntegerField(blank=True, db_comment='Categor√≠a 1', null=True)),
                ('quote_c2', models.IntegerField(blank=True, db_comment='Categor√≠a 2', null=True)),
                ('quote_c3', models.IntegerField(blank=True, db_comment='Categor√≠a 3', null=True)),
                ('quote_country', models.IntegerField()),
                ('quote_province', models.IntegerField()),
                ('quote_created', models.DateTimeField()),
                ('quote_opened', models.DateTimeField(blank=True, null=True)),
                ('quote_edited', models.DateTimeField(blank=True, null=True)),
                ('quote_closed', models.DateTimeField(blank=True, null=True)),
                ('number_coins', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('quote_type', models.CharField(max_length=8)),
                ('payed', models.IntegerField()),
                ('latitud', models.CharField(blank=True, max_length=30, null=True)),
                ('longitud', models.CharField(blank=True, max_length=30, null=True)),
                ('project_advance', models.CharField(blank=True, max_length=25, null=True)),
                ('project_type', models.CharField(blank=True, max_length=33, null=True)),
                ('project_finance_status', models.CharField(blank=True, max_length=26, null=True)),
                ('project_value', models.CharField(blank=True, max_length=17, null=True)),
                ('project_name', models.CharField(blank=True, max_length=50, null=True)),
                ('has_budget', models.IntegerField(blank=True, null=True)),
                ('budget', models.FloatField(blank=True, null=True)),
                ('project_responsable', models.CharField(blank=True, max_length=50, null=True)),
                ('project_email', models.CharField(blank=True, max_length=50, null=True)),
                ('project_phone', models.IntegerField(blank=True, null=True)),
                ('project_qualification', models.IntegerField(blank=True, null=True)),
                ('comerce', models.IntegerField(blank=True, null=True)),
                ('qualification_description', models.TextField(blank=True, null=True)),
                ('qualification_status', models.CharField(blank=True, max_length=16, null=True)),
                ('qualification_date', models.DateField(blank=True, null=True)),
                ('manual_admin_quote', models.IntegerField(blank=True, null=True)),
                ('install_time', models.CharField(blank=True, max_length=250, null=True)),
                ('pay_form', models.CharField(blank=True, max_length=250, null=True)),
                ('same_client_address', models.IntegerField(blank=True, null=True)),
                ('delivered_place', models.CharField(blank=True, max_length=255, null=True)),
                ('has_transport', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('cex_client_crm_id', models.IntegerField(blank=True, null=True)),
                ('created_by_stand', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_quotes',
                'db_table_comment': 'gesti√≥n de cotizaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexSeo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(db_comment='Primary Keyword - Secondary Keyword | Brand Name\n8-foot Green Widgets - Widgets & Tools | Widget World\n50-60 characters\nhttps://moz.com/learn/seo/title-tag', max_length=60)),
                ('page_description', models.CharField(db_comment='160 characters', max_length=255)),
                ('page_keywords', models.CharField(blank=True, max_length=120, null=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_image', models.CharField(blank=True, max_length=255, null=True)),
                ('og_url', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_card', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_url', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_title', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_description', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_image', models.CharField(blank=True, max_length=255, null=True)),
                ('robots', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_seo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexServiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('seo_id', models.IntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=45, null=True)),
                ('specifications', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(db_comment='producto ¬´product¬ª o servicio ¬´service¬ª', max_length=20)),
                ('active', models.TextField()),
                ('upc', models.CharField(max_length=120)),
                ('price', models.FloatField()),
                ('item_type', models.CharField(blank=True, max_length=5, null=True)),
                ('creation_date', models.DateTimeField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('url_web', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.CharField(max_length=45)),
                ('counter', models.IntegerField(db_comment='Contador de accesos\n')),
                ('promoted', models.TextField(db_comment='Produto es promovido')),
                ('highlight', models.TextField()),
                ('delivery_to', models.CharField(blank=True, max_length=255, null=True)),
                ('tour_switch', models.IntegerField(db_comment='Switch tour virtual ')),
                ('bnb_switch_switch', models.IntegerField(db_comment='Switch c√≥digo bnb')),
                ('vr_tour', models.TextField(db_comment='C√≥digo tour virtual')),
                ('bnb_code', models.TextField(db_comment='C√≥digo bnb')),
                ('position', models.IntegerField(db_comment='Posici√≥n del producto')),
                ('discount', models.FloatField()),
                ('has_discount', models.IntegerField()),
                ('delivery_cost', models.FloatField()),
                ('inventory', models.IntegerField()),
                ('can_sell', models.IntegerField()),
                ('price_contruex', models.FloatField()),
                ('price_public_sale', models.FloatField()),
                ('fixed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_service_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexSettings',
            fields=[
                ('setting_name', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('setting_value', models.TextField()),
            ],
            options={
                'db_table': 'cex_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexShoppingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('authorization_code', models.CharField(max_length=255)),
                ('tracking_number', models.CharField(max_length=255)),
                ('payment_status', models.IntegerField()),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_type', models.IntegerField(blank=True, null=True)),
                ('delivery_type', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(max_length=255)),
                ('completed', models.IntegerField()),
                ('notes', models.CharField(max_length=255)),
                ('date_delivered', models.DateTimeField(blank=True, null=True)),
                ('total', models.FloatField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_shopping_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexShoppingProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_shopping_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexStand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('stand_type_id', models.IntegerField()),
                ('seo_id', models.IntegerField()),
                ('stand_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('ruc', models.CharField(blank=True, max_length=13, null=True)),
                ('img', models.CharField(blank=True, max_length=255, null=True)),
                ('hits', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('tour_virtual_code', models.TextField(blank=True, null=True)),
                ('tour_virtual_active', models.TextField()),
                ('isdeleted', models.TextField(db_column='isDeleted', db_comment='√ötil para borrado l√≥gico')),
                ('isactive', models.TextField(db_column='isActive', db_comment='√ötil para uso de activo/inactivo\n')),
                ('credits_total', models.FloatField(db_comment='Valor de cr√©ditos dados por el plan')),
                ('credits_extra', models.FloatField(db_comment='Valor de cr√©ditos adquiridos')),
                ('issleep', models.TextField(db_column='isSleep', db_comment='Verificador de Estado Dormido')),
                ('pro_switch', models.TextField()),
                ('pro_slide_image', models.CharField(max_length=255)),
                ('pro_body', models.TextField(blank=True, null=True)),
                ('pro_products', models.TextField()),
                ('pro_services', models.TextField()),
                ('pro_faq', models.TextField()),
                ('pro_products_switch', models.TextField()),
                ('pro_services_switch', models.TextField()),
                ('pro_hv_switch', models.TextField(db_comment='switch horizontal,vertical')),
                ('video_code', models.TextField(blank=True, db_comment='Video del Stand', null=True)),
                ('email_manager', models.TextField(blank=True, null=True)),
                ('email_quotes', models.TextField()),
                ('do_related', models.TextField()),
                ('can_sell', models.IntegerField()),
                ('switch_store', models.IntegerField()),
                ('store_code', models.TextField(blank=True, null=True)),
                ('professional_type_id', models.IntegerField(blank=True, null=True)),
                ('builder_type_id', models.IntegerField(blank=True, null=True)),
                ('renewal_date', models.DateField(blank=True, null=True)),
                ('state_1', models.TextField()),
                ('state_2', models.TextField()),
                ('state_3', models.TextField()),
                ('state_4', models.TextField()),
                ('state_5', models.TextField()),
                ('state_6', models.TextField()),
                ('state_7', models.TextField()),
                ('state_8', models.TextField()),
                ('state_9', models.TextField()),
                ('state_10', models.TextField()),
                ('date_activate_shopping', models.DateTimeField(blank=True, null=True)),
                ('delivery_cost', models.FloatField()),
                ('url', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=30)),
                ('industry_id', models.IntegerField(blank=True, null=True)),
                ('adsense_code', models.TextField(blank=True, null=True)),
                ('adsense_enabled', models.IntegerField()),
                ('cex_whatsapp_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('cex_whatsapp_start_date', models.DateField(blank=True, null=True)),
                ('cex_whatsapp_end_date', models.DateField(blank=True, null=True)),
                ('cex_whatsapp_enabled', models.IntegerField()),
                ('show_map', models.IntegerField(blank=True, null=True)),
                ('manual_end_date_whatsapp', models.IntegerField(blank=True, null=True)),
                ('show_product_price', models.IntegerField(blank=True, null=True)),
                ('percent_price_contruex', models.FloatField()),
                ('percent_price_public_sale', models.FloatField()),
                ('enable_quotes_crm', models.IntegerField(blank=True, null=True)),
                ('cex_manage_crm_start_date', models.DateField(blank=True, null=True)),
                ('cex_manage_crm_end_date', models.DateField(blank=True, null=True)),
                ('manage_crm', models.IntegerField(blank=True, null=True)),
                ('manage_client_quotes_crm', models.IntegerField(blank=True, null=True)),
                ('cex_manage_client_quotes_crm_start_date', models.DateField(blank=True, null=True)),
                ('cex_manage_client_quotes_crm_end_date', models.DateField(blank=True, null=True)),
                ('dealers', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('enable_client_quotes_form', models.IntegerField(blank=True, null=True)),
                ('enable_client_advisory_distributors_form', models.IntegerField(blank=True, null=True)),
                ('other_trans_emails', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('other_users', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', db_comment='(DC2Type:json_array)', null=True)),
                ('enable_quote_direct', models.IntegerField(blank=True, null=True)),
                ('enable_super_stand', models.IntegerField(blank=True, null=True)),
                ('date_activate_super_stand', models.DateTimeField(blank=True, null=True)),
                ('super_stand_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cex_stand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexStandExpenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'cex_stand_expenses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexStandIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('industry_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_stand_industry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexStandTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=120)),
                ('new_profile', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_stand_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.CharField(max_length=45)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('stand_id', models.IntegerField()),
                ('plan_id', models.IntegerField()),
                ('plan_valid_for', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=250, null=True)),
                ('edit_user', models.IntegerField(blank=True, null=True)),
                ('months', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_subscription',
                'db_table_comment': 'Gestion de suscripciones construex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cex_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexUserQuotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('quotes_id', models.IntegerField()),
            ],
            options={
                'db_table': 'cex_user_quotes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexVirtualTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stand_id', models.IntegerField()),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('img', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cex_virtual_tour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CexWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(db_comment='Acci√≥n realizada', max_length=2)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('balance', models.FloatField(blank=True, null=True)),
                ('cex_stand_id', models.IntegerField()),
                ('log_usr', models.IntegerField()),
                ('transaction_detail', models.TextField()),
                ('plan_credits', models.FloatField(blank=True, db_comment='control de cr√©ditos del plan', null=True)),
                ('purchased_credits', models.FloatField(blank=True, db_comment='control de cr√©ditos adquiridos', null=True)),
            ],
            options={
                'db_table': 'cex_wallet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migration',
            fields=[
                ('version', models.CharField(max_length=180, primary_key=True, serialize=False)),
                ('apply_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'migration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_id', models.IntegerField(db_comment='dektrium', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='dektrium', max_length=255, null=True)),
                ('public_email', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='dektrium', max_length=255, null=True)),
                ('gravatar_email', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='dektrium', max_length=255, null=True)),
                ('gravatar_id', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='dektrium', max_length=32, null=True)),
                ('location', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='localidad lat,lng', max_length=255, null=True)),
                ('website', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Sitio web', max_length=255, null=True)),
                ('bio', models.TextField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Biograf√≠a', null=True)),
                ('timezone', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Zona horaria', max_length=40, null=True)),
                ('cex_first_name', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=100, null=True)),
                ('cex_last_name', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Apellido', max_length=100, null=True)),
                ('cex_contact_phone', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Tel√©fono de contacto', max_length=45, null=True)),
                ('cex_newsfeed_subscription', models.TextField(blank=True, db_comment='Subscripci√≥n a noticias', null=True)),
                ('cex_city', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', db_comment='Ciudad', max_length=45, null=True)),
                ('cex_country_id', models.IntegerField(blank=True, db_comment='Pais Id', null=True)),
                ('cex_province_id', models.IntegerField(blank=True, null=True)),
                ('cex_status', models.CharField(db_comment='Status del usuario', max_length=25)),
                ('cex_comments', models.TextField(blank=True, null=True)),
                ('cex_home_address', models.CharField(blank=True, max_length=255, null=True)),
                ('cex_billing_address', models.CharField(blank=True, max_length=255, null=True)),
                ('cex_ruc', models.CharField(blank=True, max_length=13, null=True)),
                ('cex_contact_home_phone', models.CharField(max_length=45)),
                ('email_visitor_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('provider', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=255)),
                ('client_id', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=255)),
                ('data', models.TextField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', null=True)),
                ('code', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=32, null=True, unique=True)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=255, null=True)),
                ('username', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=255, null=True)),
            ],
            options={
                'db_table': 'social_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('code', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=32)),
                ('created_at', models.IntegerField()),
                ('type', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=255, unique=True)),
                ('email', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=255, unique=True)),
                ('password_hash', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=60)),
                ('auth_key', models.CharField(db_collation='utf8mb3_uca1400_ai_ci', max_length=32)),
                ('confirmed_at', models.IntegerField(blank=True, null=True)),
                ('unconfirmed_email', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=255, null=True)),
                ('blocked_at', models.IntegerField(blank=True, null=True)),
                ('registration_ip', models.CharField(blank=True, db_collation='utf8mb3_uca1400_ai_ci', max_length=45, null=True)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('last_login_at', models.IntegerField(blank=True, null=True)),
                ('stand_id', models.IntegerField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField(db_comment='terminos y condiciones aceptados o no aceptados')),
                ('stand_assign', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
